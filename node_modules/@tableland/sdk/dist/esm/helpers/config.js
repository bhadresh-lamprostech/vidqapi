import { getBaseUrl } from "./chains.js";
import { getSigner } from "./ethers.js";
export async function checkWait(config, receipt) {
    if (config.autoWait ?? false) {
        const waited = await receipt.wait();
        return { ...receipt, ...waited };
    }
    return receipt;
}
export async function extractBaseUrl(conn = {}, chainNameOrId) {
    if (conn.baseUrl == null) {
        if (conn.signer == null) {
            if (chainNameOrId == null) {
                throw new Error("missing connection information: baseUrl, signer, or chainId required");
            }
            return getBaseUrl(chainNameOrId);
        }
        const chainId = await conn.signer.getChainId();
        return getBaseUrl(chainId);
    }
    return conn.baseUrl;
}
export async function extractSigner(conn = {}, external) {
    if (conn.signer == null) {
        return await getSigner(external);
    }
    return conn.signer;
}
export async function extractChainId(conn = {}) {
    const signer = await extractSigner(conn);
    const chainId = await signer.getChainId();
    if (chainId === 0 || isNaN(chainId) || chainId == null) {
        /* c8 ignore next 4 */
        throw new Error("cannot find chainId: is your signer connected to a network?");
    }
    return chainId;
}
//# sourceMappingURL=config.js.map